---------------------------
Feature List
---------------------------

New architecture split - independent modules w/ event bus
  1. Core
     X Application launcher
     X Event bus
	 X Data store w/ module-specific models/tables
	 X User management
	 X Configuration
	 X Plugin loading
	 X Alerts / action required
     X Flow state machine
     X Janitor / cleanup scheduler
  2. Transfers module
  3. Download agents
  4. Feed module
  5. Library module
     - Metadata provider plugins
  6. Search module
  7. Sharing module
  8. Client interfaces
  9. Third-party plugins (XBMC remote, etc)

All modules:
  - Database cleanup
  - Revisit unicode support in Twisted
  - Language translations

Transfers Module:
  X Rework transfer workflow
    X Standard download workflow:
      X Initializing (fetch metadata)
      X Transferring (download agent is fetching)
      X Copying (fetching from download agent to work dir)
      X Importing (importing into media library)
      X Blocked (import / media detection failed, requires user interaction)
      X Completed (imported, safe to delete)
      X Seeding (torrents only)
    X Additional download states:
      X Stopping
      X Stopped (download manually paused)
      X Failed
    X Standard upload/seeding workflow:
      X Initializing (creating ad-hoc torrent)
      X Transferring (HTTP download)
      X Completed (HTTP download complete)
      X Seeding (torrents only)
      X Failed -> fixed at last progress
    X Additional upload states:
      X Stopping
      X Stopped (upload manually paused)
      X Failed
  X Additional transfer attributes (from current download)
	X Type (upload/download)
	X Priority
	X Bandwidth limit
	X Seed ratio
  - Enforce which actions are allowed for each state to avoid "action in
    progress" conflicts
  - Oh yeah, implement the actual transfer action logic (functionality!
    it's an afterthought!)

Transfer Agents:
  - Independent download managers that handle bit-moving for
    core transfer manager
  - Receives URL or metadata from core transfer manager
  - May be local or remote (seed box)
  - A download agent can have acceptance restrictions, such as only
    handling torrents for a whitelist of trackers
  - Global settings:
    - Default download bandwidth limit
    - Max download bandwidth limit (+ time-based)
    - Default upload bandwidth limit
    - Max upload bandwidth limit (+ time-based)
	- Default connection limit
	- Max connection limit (+ time-based)
	- Default seed ratio
	- Max seed ratio
	- Default time to live
	- Max time to live
	- Default public/private
	- Force public/private
  - API calls:
	- Get downloads & status
    - Add download
	- Download action (start, pause, resume, queue)
	- Update download settings (throttling, seeding, ttl,
	  public/private, etc.)
	- Copy download to local directory
	- Remove download (and stop seeding)
  - Downloads are stopped in one of the following conditions:
    - It is complete, and reaches the target seeding ratio or TTL
	- It is cancelled by the requestor
  - Downloads are removed from disk when they are removed
    by the requestor

Local Agent

rTorrent Agent

Torrent Download Client:
  - Fix alert handling
  - Fix seeding / upload ratio
  - Magnet links for torrents
  - Rethink workflows for adding magnet vs. .torrent downloads
  - Verify torrent traffic encryption

HTTP Download Client:
  - Folder downloads (ZIP) get unpacked on completion
  - Metadata mimetypes (torrent, etc) should re-inject into transfer
    module after setting content as download metadata

FTP Download Client:
  - FTP downloads

Library Module:
  - Better automatic media type guessing - use thetvdb.com / themoviedb.com?
  - New "Series" section configuration separately from feeds
  - Move series pruning into library module, based on file scan, not
    feed records
  - Skip video samples on import (prefer largest video file)
  - Provide searchable index for remote shares
  - Improve library browser UI - hard to match "X" with media item
  - Store metadata on all library files
  - Allow arbitrary media types (instead of 6 standard types)
  - Rename / reassign / move / delete media files
  - Media transcoding on import

Feed Module:
  - Requires library, transfers module
  - Allow RSS feeds to get show name from the feed for multi-show feeds
  - Parse <description> field for metadata hints
  - Better filtering of duplicates
  - Resolution preference (HD/SD)
  - Automatically prefer/replace with REPACK/PROPER
  - Release group / keyword preference
  - Keyword blacklist (TS, CAM, LINE, etc)
  - Media format blacklist (i.e. MKV for Chromecast playback)
  - Watch a local directory for torrents to auto-download
  - Link to a series in the library, default to auto-detect/auto-create

Search Module:
  - Pluggable search providers
  - Add a watchlist for notification of new releases

Sharing Module:
  - Requires library module
  - Max bandwidth settings
  - Periodically refresh search indexes from remote peers
  - Search provider that uses peer indexes to find media
  - Ad-hoc torrent creation in addition to HTTP downloads for load sharing
  - Queue an entire remote folder for download
  - Add peer uploads to central active uploads queue for monitoring

Web UI:
  - Mobile/desktop responsive design
  - Pluggable homepage widgets
    - Active downloads (+ X queued) -> link to download queue detail
	- Recently completed + available for seeding -> link to history
	- Search watchlist -> link to watchlist
	- Active uploads (+ X queued) -> link to upload queue detail
	- System/agent status
  - Per-download settings (seeding, throttling, etc)
  - Allow changing download settings inline in overview (media type, etc)
  - UI hooks for modules
  - REST interface for managing downloads

Client Interfaces:
  - Android torrent handler
  - Windows torrent handler
  - Mobile web interface
  - Chrome magnet:// protocol handler
