---------------------------
0.3: "Sharing is Caring"
---------------------------
Focused on seeding, sharing, private trackers
Features TBD

---------------------------
0.4: "Conan the Librarian"
---------------------------
Focused on better library management
Features TBD

---------------------------
0.5: "Social Butterfly"
---------------------------
Focused on remote shares and searching
Features TBD

---------------------------
Feature List
---------------------------

New architecture split - independent modules
  1. Transfers module
  2. Download agents
  3. Feed module
  4. Library module
  5. Search module
  6. Sharing module

General:
  - Revist unicode support in Twisted
  - Language translations

Transfers Module:
  - Rework transfer workflow
    - Standard download workflow:
      - Loading (fetch torrent)
      - Downloading (download agent is fetching)
      - Copying (fetching from download agent to work dir)
      - Importing (importing into media library)
      - Seeding (torrents only)
      - Completed (imported, safe to delete)
    - Additional download states:
      - Stopped (download manually paused)
      - Failed
    - Standard upload/seeding workflow:
      - Initializing (creating ad-hoc torrent)
      - Uploading (HTTP download)
      - Completed (HTTP download complete)
      - Seeding (torrents only)
      - Failed -> fixed at last progress
    - Additional upload states:
      - Stopped (download manually paused)
      - Failed
  - Fix seeding / upload ratio
  - Create separate seed queue / filter seeds out of default download view
  - Show current peer downloads (from Sharing Module) in seed view
  - Add time-based bandwidth limits
  - Allow changing media type of a download inline (AJAX) in overview
  - Ad-hoc torrent creation / publishing
  - Magnet links for torrents
  - Verify torrent traffic encryption
  - FTP downloads

Download Agents:
  - Independent download managers that handle bit-moving for
    core transfer manager
  - Receives URL or torrent from core transfer manager
  - A download agent can have acceptance restrictions, such as only
    handling torrents for a whitelist of trackers
  - Each download request contains:
    - User/password of account on download agent (separate from main
      Downpour account for sharing purposes)
    - Domain/IP of the requesting Downpour instance
    - Seeding policy (as percentage)
	- Whether this download is public or not
  - API calls:
    - Add download
	- View my downloads & status
	- View all public downloads & status
	- Get individual download fetch URL
	- Remove download (and stop seeding)
  - Downloads are stopped when both are true:
    - It is complete, and reaches the target seeding ratio, OR
	- It is cancelled by the requesting Downpour
  - Downloads are removed from disk when:
    - All of the following criteria are met:
      - They are complete
	  - The reach the target seeding ratio
	  - They have been fetched by the requesting Downpour
	  - There is not a fetch currently is progress, and has not
	    been one for 30 minutes
	  - The download has not been pinned as permanent
	- Or, they are manually killed by the requesting Downpour

Library Module:
  - Better media type guessing - use thetvdb.com / themoviedb.com?
  - New "Series" section configuration separately from feeds
  - Move series pruning into library module, based on file scan, not
    feed records
  - Media transcoding on import
  - Generate new searchable index on library update
  - Improve library browser UI - hard to match "X" with media item
  - Store metadata on all library files

Feed Module:
  - Allow RSS feeds to get show name from the feed for multi-show feeds
  - Parse <description> field for metadata hints
  - Better filtering of duplicates
  - Resolution preference (HD/SD)
  - Release group / keyword preference
  - Watch a local directory for torrents to auto-download
  - Link to a show in the library, default to auto-detect/auto-create
  - Limit number of previous feed items shown

Search Module:
  - Pluggable search providers

Sharing Module:
  - Separate sharing bandwidth settings
  - Periodically refresh search indexes from remote shares
  - Add search provider that uses peer indexes to find media
  - Ad-hoc torrent creation instead of HTTP downloads for load sharing
  - Queue entire remote folder for download
  - Better logging/monitoring of peer downloads in web UI
