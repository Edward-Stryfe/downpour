---------------------------
0.3: "Sharing is Caring"
---------------------------
Focused on seeding, sharing, private trackers
Features TBD

---------------------------
0.4: "Conan the Librarian"
---------------------------
Focused on better library management
Features TBD

---------------------------
0.5: "Social Butterfly"
---------------------------
Focused on remote shares and searching
Features TBD

---------------------------
Feature List
---------------------------

New architecture split - independent modules w/ event bus
  1. Core
     - Event bus
	 - Data store
	 - User management
	 - Agent registry
  2. Transfers module
  3. Download agents
  4. Feed module
  5. Library module
     - Metadata providers
  6. Search module
  7. Sharing module
  8. Client interfaces
  9. Third-party plugins (XBMC remote, etc)

General:
  - Flow state machine
  - Database cleanup
  - Revisit unicode support in Twisted (upgrade to 13?)
  - Language translations

Transfers Module:
  - Rework transfer workflow
    - Standard download workflow:
      - Loading (fetch metadata)
      - Downloading (download agent is fetching)
      - Copying (fetching from download agent to work dir)
      - Importing (importing into media library)
      - Seeding (torrents only)
      - Completed (imported, safe to delete)
    - Additional download states:
      - Stopped (download manually paused)
      - Failed
    - Standard upload/seeding workflow:
      - Initializing (creating ad-hoc torrent)
      - Uploading (HTTP download)
      - Completed (HTTP download complete)
      - Seeding (torrents only)
      - Failed -> fixed at last progress
    - Additional upload states:
      - Stopped (upload manually paused)
      - Failed
  - Enforce which actions are allowed for each state to avoid "action in
    progress" conflicts
  - Fix seeding / upload ratio
  - Create separate seed queue / filter seeds out of default download view
  - Show current peer downloads (from Sharing Module) in seed view
  - Add time-based bandwidth limits
  - Magnet links for torrents
  - Verify torrent traffic encryption
  - HTTP folder downloads - single download record with multiple individual
    downloads inside, show a single progress is overview
  - FTP downloads

Download Agents:
  - Independent download managers that handle bit-moving for
    core transfer manager
  - Receives URL or torrent from core transfer manager
  - A download agent can have acceptance restrictions, such as only
    handling torrents for a whitelist of trackers
  - Global defaults/overrides for bandwidth throttling, connection
    limit and seeding
  - Better detection of "hung" downloads (i.e. bad VPN connection)
  - Each download request contains:
    - User/password of account on download agent (separate from main
      Downpour account for sharing purposes)
    - Domain/IP of the requesting Downpour instance
    - Bandwidth throttling / connection limits
    - Seeding policy (as percentage)
    - Time to live (to allow other Downpour instances to download)
	- Whether this download is public or not
  - API calls:
    - Add download
	- View my downloads & status
	- View all public downloads & status
	- Get individual download fetch URL
	- Remove download (and stop seeding)
  - Downloads are stopped in one of the following conditions:
    - It is complete, and reaches the target seeding ratio, OR
	- It is cancelled by the requesting Downpour
  - Downloads are removed from disk when:
    - All of the following criteria are met:
      - They are complete
	  - The reach the target seeding ratio
	  - They have been fetched by the requesting Downpour
	  - There is not a fetch currently is progress, and has not
	    been one for 30 minutes
	  - The time to live has expired
	- Or, they are manually deleted by the requesting Downpour

Torrent Download Agent:
  - Fix alert handling
  - Rethink workflows for adding magnet vs. .torrent downloads

Library Module:
  - Better media type guessing - use thetvdb.com / themoviedb.com?
  - New "Series" section configuration separately from feeds
  - Move series pruning into library module, based on file scan, not
    feed records
  - Media transcoding on import
  - Skip video samples on import
  - Generate searchable index on library update for remote shares
  - Improve library browser UI - hard to match "X" with media item
  - Store metadata on all library files

Feed Module:
  - Allow RSS feeds to get show name from the feed for multi-show feeds
  - Parse <description> field for metadata hints
  - Better filtering of duplicates
  - Resolution preference (HD/SD)
  - Automatically prefer/replace with REPACK
  - Release group / keyword preference
  - Keyword blacklist (TS, CAM, LINE, etc)
  - Watch a local directory for torrents to auto-download
  - Link to a series in the library, default to auto-detect/auto-create

Search Module:
  - Pluggable search providers
  - Add a "Watchlist" section for monitoring upcoming releases from
    search sites, integrates with feeds

Sharing Module:
  - Separate sharing bandwidth settings
  - Periodically refresh search indexes from remote shares
  - Add search provider that uses peer indexes to find media
  - Ad-hoc torrent creation instead of HTTP downloads for load sharing
  - Queue an entire remote folder for download
  - Add peer uploads to central active uploads queue for monitoring

Web UI:
  - Mobile/desktop responsive design
  - New homepage contents: active downloads, active uploads, current
    queue, watchlist matches, download history, agent status, system
	status
  - Allow changing media type of a download inline in overview
  - Per-download settings (seeding, throttling, etc)
  - UI hooks for modules
  - REST interface for managing downloads

Client Interfaces:
  - Android torrent handler
  - Windows torrent handler
  - Mobile web interface
  - Chrome magnet:// protocol handler
